This file contains the usage of assert statements

Summary
compatibilitySWI.pl
    remember_
    prop_

    used by set_value,get_value, set_prog, get_prop.
    set_value and get_value can use instead native nb_set_val and nb_get_val
    set_prop(Atom,Prop, Value) podem talvez ser implementados por uma combinação de nb_set_val e dicts

compatibilitySWI.pl
    assert(remember_(Name,Value)).
    assert(remember_(Name,Value)),!.
   assert(prop_(Atom,Prop,Value)).
   assert(prop_(Atom,Prop,Value)).
dataDictionary.pl
    assert(clioStru(File)),

      % store a structure predicate %
   assert(clioGroup(Group,Id)),!.
   assert(clioElement(Element,Id)),!.
gacto.pl
                  assert(rel_ref(PESSOA-NOME,IDDEST2,NOMEDEST))),
    assert(mesmo(ID,MKEY)),% registamos a equivalencia */
    assert(rpessoa(KEY,NOME)),
    assert(rpessoa(KEY,NOME)),
    assert(externa(KEY)),
gactoxml.pl
      assert(group_path(NewPath)),!.
   	  assert(attribute_cache(AncId,ID,T,V)),
        assert(used_id(Id)),!.
   get_group_id(Group,Id,Id0) :- check_id_prefix(Id0,Id),put_value(Group,Id),\+ used_id(Id),assert(used_id(Id)),!. % If everything fails accept the kleio auto id
      assert(carel(Group,Group2,Type,Value),true),fail.
      assert(carel(Person,Person2,Type,Value)).
      assert(carelnot(Person,Person2)),fail.
struSyntax.pl
storeGroupDoc(gdoc(G,DOC)):- assert(gdoc(G,DOC)),put_value(lastGroupDoc,G).
storeElementDoc(edoc(E,DOC)):- (get_value(lastGroupDoc,G);G='*'),assert(edoc(G,E,DOC)).
topLevel.pl
     assert(cmd(OldCmd,NewTokens)),!.
     assert(cmd(Command,Tokens)),!.
     assert(cmd(Command,Tokens)),!.
utilities.pl
setgensymbol(S,N):- assert(current_num(S,N)),!.
